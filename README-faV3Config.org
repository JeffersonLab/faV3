This README describes the use of the faV3Config library of routines to configure one or more fadc250 V3s.  The configuration file routines here were adapted from the Hall-B implementation.

* Example faV3Config file (contains all definitions recognized by faV3Config):
     config/example.cnf

* Default Usage:
** include faV3Config header in program/readout list

     #include "faV3Config.h"

** Call faV3Config(...) after fadc initialization with faInit(...):

     int faV3Config(char *fname);

   Examples:

** Filename with relative path

     faV3Config("example.cnf");

   PATHS checked:
     ${FAV3_PARAMS}/example.cnf
     ./faV3/example.cnf

** Filename with ./ relative path

     faV3Config("./example.cnf");

   PATHS checked:
     ./example.cnf
     
** Filename with full path

     faV3Config("/full/path/example.cnf");

   PATHS checked:
     /full/path/example.cnf
     
** No filename

     faV3Config("");

   PATHS checked:
     ${FAV3_PARAMS}/faV3/${EXPID}.cnf
     ./faV3/${EXPID}.cnf     


* =FADC_READ_CONF_FILE=
- Ddefined in the example readout list (rol/fadc_vxs_list.c) as
#+begin_src C
#define FADC_READ_CONF_FILE {			\
    faV3Config("");				\
    if(rol->usrConfig)				\
      faV3Config(rol->usrConfig);		\
  }
#+end_src

This macro first looks for config file here:
#+begin_example
${FAV3_PARAMS}/faV3/${EXPID}.cnf
#+end_example
or 
#+begin_example
./faV3/${EXPID}.cnf
#+end_example
and applies them to the modules initialized with =faInit(...)=

Then it checks for a configuration file specified in the COOL database.  The string is taken from the ROC Component setting "User Config".  If it is defined, faV3Config will treat the config file as is done in the examples above.
